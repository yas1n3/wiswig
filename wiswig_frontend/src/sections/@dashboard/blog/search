const StyledPopper = styled((props) => <Popper placement="bottom-start" {...props} />)({
  width: '280px !important',
});

// ----------------------------------------------------------------------

BlogPostsSearch.propTypes = {
  posts: PropTypes.array.isRequired,
};

export default function BlogPostsSearch({ posts }) {
  // Define a function to filter the options based on user input
  const filterOptions = (options, state) => {
    // Get the user input
    const input = state.inputValue.toLowerCase();
    // Return only the options that start with the input
    return options.filter((option) => option.title.toLowerCase().startsWith(input));
  };

  return (
    <Autocomplete
      sx={{ width: 280 }}
      autoHighlight
      popupIcon={null}
      PopperComponent={StyledPopper}
      options={posts}
      getOptionLabel={(post) => post.title}
      isOptionEqualToValue={(option, value) => option.id === value.id}
      // Add a filterOptions prop to customize the filtering logic
      filterOptions={filterOptions}
      renderInput={(params) => (
        <TextField
          {...params}
          placeholder="Search newsletter..."
          InputProps={{
            ...params.InputProps,
            startAdornment: (
              <InputAdornment position="start">
                <Iconify icon={'eva:search-fill'} sx={{ ml: 1, width: 20, height: 20, color: 'text.disabled' }} />
              </InputAdornment>
            ),
          }}
        />
      )}
    />
  );
}
